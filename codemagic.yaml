workflows:
  maui_ios_browserstack:
    name: .NET MAUI iOS Build (Simulator) + BrowserStack Upload
    instance_type: mac_mini_m1
    max_build_duration: 60
    environment:
      vars:
        DOTNET_VERSION: 8.0.415
        DOTNET_ROOT: /usr/local/share/dotnet
        PATH: /usr/local/share/dotnet:$PATH
        BROWSERSTACK_USERNAME: $BROWSERSTACK_USERNAME
        BROWSERSTACK_ACCESS_KEY: $BROWSERSTACK_ACCESS_KEY
      xcode: 16.0

    scripts:
      - name: Install .NET 8 SDK
        script: |
          echo "Installing .NET 8 SDK..."
          brew uninstall --cask dotnet-sdk || true
          brew install --cask dotnet-sdk@8
          sudo ln -sfn /usr/local/share/dotnet/dotnet /usr/local/bin/dotnet
          dotnet --version
          dotnet --list-sdks

      - name: Install MAUI workloads
        script: |
          echo "Installing .NET MAUI workloads..."
          sudo dotnet workload install maui --ignore-failed-sources
          sudo dotnet workload install maui-android --ignore-failed-sources
          sudo dotnet workload install maui-ios --ignore-failed-sources
          sudo dotnet workload install maui-maccatalyst --ignore-failed-sources
          dotnet workload list

      - name: Restore dependencies
        script: |
          echo "Restoring dependencies..."
          dotnet workload restore
          dotnet restore SF_Demo.sln

      - name: Build iOS Simulator app
        script: |
          dotnet build SF_Demo/SF_Demo.csproj \
            -c Release \
            -f net8.0-ios \
            /p:RuntimeIdentifier=iossimulator-arm64 \
            /p:Platform=iPhoneSimulator \
            /p:OutputPath=./output

      - name: Verify build output
        script: |
          echo "Checking build output:"
          ls -R ./output || true

      - name: Package app for BrowserStack
        script: |
          APP_PATH=$(find ./output -type d -name "*.app" | head -n 1)
          if [ -z "$APP_PATH" ]; then
            echo "❌ No .app file found in output folder!"
            exit 1
          fi
          echo "✅ Found app at: $APP_PATH"
          cd "$(dirname "$APP_PATH")"
          zip -r app.zip "$(basename "$APP_PATH")"
          mv app.zip $CM_BUILD_DIR/app.zip

      - name: Upload to BrowserStack
        script: |
          curl -u "$BROWSERSTACK_USERNAME:$BROWSERSTACK_ACCESS_KEY" \
            -X POST "https://api-cloud.browserstack.com/app-automate/upload" \
            -F "file=@$CM_BUILD_DIR/app.zip"

    artifacts:
      - app.zip
